# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "party-backend"
version = "0.1.0"
description = "Awesome `party-backend` is a Python cli/package created with https://github.com/Undertone0809/python-package-template"
readme = "README.md"
authors = ["PromptsLego <zeeland4work@gmail.com>"]
license = "MIT"
repository = "https://github.com/PromptsLego/party-backend"
homepage = "https://github.com/PromptsLego/party-backend"

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = []  #! Update me

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [  #! Update me
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
]


[[tool.poetry.source]]
name = "tsinghua"
url = "https://pypi.tuna.tsinghua.edu.cn/simple"
priority = "primary"

[tool.poetry.dependencies]
python = "^3.10"
loguru = "^0.7.2"
cushy-storage = "^1.3.7"
python-dotenv = "^1.0.0"
fastapi = "^0.109.0"
uvicorn = "^0.26.0"
openai = "^1.9.0"
requests = "^2.31.0"
sqlmodel = "^0.0.16"
pyjwt = "^2.8.0"
pydantic = "2.6.0"
replicate = "^0.23.1"
psycopg2-binary = "^2.9.9"
google-cloud-aiplatform = "^1.48.0"
promptulate = "^1.15.3"
alembic = "^1.13.1"
python-multipart = "^0.0.9"
pydantic-settings = "^2.2.1"
tenacity = "^8.2.3"
emails = "^0.6"
email-validator = "^2.1.0.post1"
passlib = "^1.7.4"
types-passlib = "^1.7.7.20240106"
jinja2 = "^3.1.2"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}

[tool.poetry.dev-dependencies]
pytest = "^7.4.3"
pytest-html = "^3.1.1"
pytest-cov = "^3.0.0"
bandit = "^1.7.1"
ruff = "^0.1.6"
coverage = "^6.1.2"
coverage-badge = "^1.1.0"

[tool.ruff]
# https://beta.ruff.rs/docs/settings/
# https://docs.astral.sh/ruff/configuration/
line-length = 88

# https://beta.ruff.rs/docs/rules/
select = ["E", "W", "F", "I"]
extend-select = ["I"]
ignore = ["F401"]

# Exclude a variety of commonly ignored directories.
respect-gitignore = true
ignore-init-module-imports = true
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]

[coverage.report]
fail_under = 50
show_missing = true
